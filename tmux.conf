#source-file ~/.tmux.conf.local

set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

set-option -g default-terminal "screen-256color"

# increase responsiveness
set -s escape-time 1

set-option -g history-limit 30000

# set PREFIX to Ctrl-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# break out current pane into it's own window
bind + break-pane

# allow for using ctrl-l for clearing screen
bind C-l send-keys 'C-l'

# toggle pane full-screen
bind y resize-pane -Z


# make window and pane number index start at 1
set -g base-index 1
set -g pane-base-index 1

# reload config file with "r"
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use v for vertical and h for horizontal splitting of the current window
bind v split-window -h -c '#{pane_current_path}'
bind g split-window -v -c '#{pane_current_path}'

# cycle throug windows
bind -r o next-window
bind -r i previous-window
unbind-key -n p # and don't mess up window selection when typing with my fat fingers

# move around panes with vi movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes in steps of 5
# and allow repeating pressing the key without need for PREFIX again
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Move around in copy mode with vi movement commands
setw -g mode-keys vi

# Enter copy mode with "space"
unbind [
bind Space copy-mode
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# paste last buffer
bind b choose-buffer

# split panes evenly
bind e select-layout even-horizontal

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\\ select-pane -l

################################################################
#### Status bar
################################################################

#bind S set -g status
set -g status-justify left

set -g status-right-length 44
set -g status-left-length 25
set -g status-interval 5
set -g status-right "#[fg=blue]#(battery.sh)#[fg=blue]%d/%b/%Y___#[fg=yellow]%H:%M#[fg=blue]___#(tmux-mem-cpu-load -t 0 -g 0 -m 2 -i 3)"
set -g status-left "    "

################################################################
#### COLOUR (Solarized dark)
################################################################

# get list of available colors with this bash snippet
# (from https://superuser.com/a/285400)
# for i in {0..255}; do
#    printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
# done

set -g pane-border-bg colour237
set -g pane-active-border-fg default
set -g pane-active-border-bg green
source-file ~/.dotfiles/tmux/nova-colors.conf

bind T source-file ~/.dotfiles/tmux/solarized/tmuxcolors-dark.conf \; display "DARK THEME!"
bind t source-file ~/.dotfiles/tmux/solarized/tmuxcolors-light.conf \; display "LIGHT THEME!"
bind N source-file ~/.dotfiles/tmux/nova-colors.conf \; display "NOVA THEME!"
#set -g pane-border-bg colour249
#set -g pane-active-border-fg default
#set -g pane-active-border-bg green
#source-file ~/.dotfiles/tmux/solarized/tmuxcolors-light.conf
