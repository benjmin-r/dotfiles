" vim:ft=vim

" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Misc
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

" Ctrl-P
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = '\v[\/]\.?(git|hg|svn|target|build|dist|node_modules)$'
let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:30,results:30'

" indent guide plugin
let g:indent_guides_guide_size=1
let g:indent_guides_start_level=2
let g:indent_guides_enable_on_vim_startup=1

" omnicomplete
" only complete the longest common text of all matches (not complete first match)
set completeopt+=longest
set omnifunc=syntaxcomplete#Complete  " enable omnicomplete

" html5 plugin
let g:html5_event_handler_attributes_complete = 0
let g:html5_rdfa_attributes_complete = 0
let g:html5_microdata_attributes_complete = 0

au BufNewFile,BufRead *.tmpl :set ft=html " all my .tmpl files ARE html

" syntastic
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_scala_checkers = ['fsc']
let g:syntastic_aggregate_errors = 1

" taglist
let g:tlist_scala_settings = 'scala;p:package;t:trait;c:class;o:object;m:def;l:var;C:val;T:type'
let Tlist_Show_One_File = 1

" NERDTree
command NERDTreeWindowsRightPos let g:NERDTreeWinPos = "right"
command NERDTreeWindowsLeftPos let g:NERDTreeWinPos = "left"


" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Python
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

" Add the virtualenv's site-packages to vim path
if has("python")
py << EOF
import os.path
import sys
import vim
if 'VIRTUAL_ENV' in os.environ:
    project_base_dir = os.environ['VIRTUAL_ENV']
    sys.path.insert(0, project_base_dir)
    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
    execfile(activate_this, dict(__file__=activate_this))
EOF
endif

