" vim:ft=vim

" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Vimux
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
map <Leader>vz :VimuxZoomRunner<CR>
map <Leader>vi :VimuxInspectRunner<CR>
map <Leader>vp :VimuxPromptCommand<CR>
map <Leader>vl :VimuxRunLastCommand<CR>
map <leader>vc :call VimuxRunCommand("bundle exec rspec --order defined --fail-fast " . bufname("%"))<CR>
map <leader>va :call VimuxRunCommand("bundle exec rspec")<CR>

" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Rails
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

map <leader>AS :AS<CR>
map <leader>AE :AE<CR>
map <leader>RS :RS<CR>
map <leader>RE :RE<CR>
" vim-i18n / rails i18n support
vmap <Leader>z :call I18nTranslateString()<CR>
vmap <Leader>dt :call I18nDisplayTranslation()<CR>


" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Git stuff
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
map <leader>gs :Gstatus<CR>

" GitGutter related
map <leader>gg :GitGutterToggle<CR>
map <leader>gp :GitGutterPreviewHunk<CR>
map <leader>gr :GitGutterUndoHunk<CR>

command! -nargs=1 Silent
  \   execute 'silent !' . <q-args>
  \ | execute 'redraw!'
map <leader>ga :Silent Git add %<CR>

" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" ctags
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

map <leader>t g<C-]>        " jump to tag under cursor, showing match-list if more than one match
map <leader>wt <C-W>g<C-]>  " open matching tag in new buffer
map <leader>m g]            " show list of matching tags
map <leader>wm <C-W>g]      " show list of matching tags in a new buffer
map <leader>r <C-t>         " jump back to previous tag on stack
map <leader>rc :!run_ctags<Enter>
nnoremap <leader>. :CtrlPTag<cr> " search taglist with ctrlp

" taglist
map <silent> <F1> :TlistRefresh<CR>
map <leader>lt :TlistToggle<CR>


" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Syntastic
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

map <leader>St :SyntasticToggleMode<CR>   " toggle between active & passive mode
map <leader>Sr :SyntasticReset<CR>        " clear error list
map <leader>Sc :SyntasticCheck<CR>        " run syntastic check


" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Misc
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

map <leader>` ysiw`
inoremap jj <ESC>l
inoremap jk <ESC>l
inoremap <ESC> <nop>
nnoremap <leader>s :w<CR>
nnoremap j gj
nnoremap k gk
nnoremap K <nop>
map E ea
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
"map q: :q               " stop that stupid window from popping up
map <leader>i2 :SetIndent2Spaces<CR>
map <leader>i4 :SetIndent4Spaces<CR>
map <leader>it :SetIndentTabs<CR>
nnoremap <leader><space> :noh<cr>   " clear highlighted search results
noremap < <<
noremap > >>
noremap <leader>oi :wq<CR>
noremap <leader>D VGdo<Esc>
nnoremap <leader>c za " toggle fold
vnoremap <leader>c za
map <leader>rn :set relativenumber<CR>
map <leader>wr  :set wrap!<CR>:set tw=80!<CR>
map <leader>wc  :!wc %<CR>
map <leader>wo  :!wc -w %<CR>
map H ^
map L $
map <leader>lo :lopen<cr>
map <leader>lc :cclose<cr>
nmap oi :q<CR>


map <leader>ln :DontShowLineNumbers<cr>
map <leader>ll :ShowLineNumbers<cr>


" use j, k, $, 0 and ^ on display lines by holding down the command
vmap <D-j> gj
vmap <D-k> gk
vmap <D-4> g$
vmap <D-6> g^
vmap <D-0> g^
nmap <D-j> gj
nmap <D-k> gk
nmap <D-4> g$
nmap <D-6> g^
nmap <D-0> g^"

noremap <leader>H :spl ~/.dotfiles/vim/keymappings.conf<CR>

function! QuickFix_toggle()
    for i in range(1, winnr('$'))
        let bnum = winbufnr(i)
        if getbufvar(bnum, '&buftype') == 'quickfix'
            cclose
            return
        endif
    endfor

    copen
endfunction

nnoremap <silent> coq :call QuickFix_toggle()<cr>

" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Spell checking
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

map <leader>de :setlocal spell spelllang=de_de<CR>
map <leader>en :setlocal spell spelllang=en_gb<CR>
map <leader>x  :setlocal nospell<CR>
" zg "add word under cursor to word list
" zG "add word under cursor to internal word list
" z= " For the word under/after the cursor suggest correctly spelled words.  This also works to find alternatives


" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Window handling
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

" move between splits easily
"  .... commented out because of vim-tmux-navigator plugin
" map <C-J> <C-W>j<C-W>_
" map <C-K> <C-W>k<C-W>_
" map <C-L> <C-W>l<C-W>_
" map <C-H> <C-W>h<C-W>_
"nnoremap <leader>v :vsplit<CR>
"nnoremap <leader>h :split<CR>
let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :TmuxNavigateDown<cr><C-w>_
nnoremap <silent> <C-k> :TmuxNavigateUp<cr><C-w>_
nnoremap <silent> <C-l> :TmuxNavigateRight<cr>
nnoremap <silent> <C-\> :TmuxNavigatePrevious<cr>

function! OpenCurrentAsNewTab()
    let l:currentPos = getcurpos()
    tabedit %
    call setpos(".", l:currentPos)
endfunction
nmap te :call OpenCurrentAsNewTab()<CR>   " open current file in new tab
nmap td :tabclose<CR>    " close current tab


" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Integrations with external programs
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

nnoremap <leader>da :Dash<CR>
nnoremap <leader>a :Ack! 


" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" Some neat tricks
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

" With the following mapping you can press Q every time you alter something in
" a paragraph, and the line-breaks get sorted out. The default meaning of
" Q is not useful, and anyway gQ makes a better job of it.
vnoremap Q gq
nnoremap Q gqap


" open current line on github ... based on
" http://felixge.de/2013/08/08/vim-trick-open-current-line-on-github.html
nnoremap <leader>gh :!echo `git url`/blob/`git rev-parse --abbrev-ref HEAD`/%\#L<C-R>=line('.')<CR> \| xargs open<CR><CR>


" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>lv :so $MYVIMRC<CR>


" strip all trailing whitespace
nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<CR>

